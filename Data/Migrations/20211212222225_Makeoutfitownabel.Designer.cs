// <auto-generated />
using System;
using Igtampe.Clothespin.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(ClothespinContext))]
    [Migration("20211212222225_Makeoutfitownabel")]
    partial class Makeoutfitownabel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AccessoryOutfit", b =>
                {
                    b.Property<Guid>("AccessoriesID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OutfitsID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AccessoriesID", "OutfitsID");

                    b.HasIndex("OutfitsID");

                    b.ToTable("AccessoryOutfit (Dictionary<string, object>)");
                });

            modelBuilder.Entity("Igtampe.Clothespin.Common.Clothes.Items.Accessory", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OwnerID");

                    b.ToTable("Accessory");
                });

            modelBuilder.Entity("Igtampe.Clothespin.Common.Clothes.Items.Belt", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OwnerID");

                    b.ToTable("Belt");
                });

            modelBuilder.Entity("Igtampe.Clothespin.Common.Clothes.Items.Overshirt", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Distinguisher")
                        .HasColumnType("int");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OwnerID");

                    b.ToTable("Overshirt");
                });

            modelBuilder.Entity("Igtampe.Clothespin.Common.Clothes.Items.Pants", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Distinguisher")
                        .HasColumnType("int");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OwnerID");

                    b.ToTable("Pants");
                });

            modelBuilder.Entity("Igtampe.Clothespin.Common.Clothes.Items.Shirt", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Distinguisher")
                        .HasColumnType("int");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OwnerID");

                    b.ToTable("Shirt");
                });

            modelBuilder.Entity("Igtampe.Clothespin.Common.Clothes.Items.Shoes", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Distinguisher")
                        .HasColumnType("int");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OwnerID");

                    b.ToTable("Shoes");
                });

            modelBuilder.Entity("Igtampe.Clothespin.Common.Clothes.Items.Socks", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OwnerID");

                    b.ToTable("Socks");
                });

            modelBuilder.Entity("Igtampe.Clothespin.Common.Clothes.Outfit", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BeltID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PantsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ShirtID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ShoesID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SocksID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("BeltID");

                    b.HasIndex("OwnerID");

                    b.HasIndex("PantsID");

                    b.HasIndex("ShirtID");

                    b.HasIndex("ShoesID");

                    b.HasIndex("SocksID");

                    b.ToTable("Outfit");
                });

            modelBuilder.Entity("Igtampe.Clothespin.Common.Tracking.LogItem", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OutfitID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OwnerID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("OutfitID");

                    b.HasIndex("OwnerID");

                    b.ToTable("LogItem");
                });

            modelBuilder.Entity("Igtampe.Clothespin.Common.Tracking.Person", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TiedUserUsername")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("TiedUserUsername");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("Igtampe.Clothespin.Common.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Username");

                    b.ToTable("User");
                });

            modelBuilder.Entity("OutfitOvershirt", b =>
                {
                    b.Property<Guid>("OutfitsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OvershirtsID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OutfitsID", "OvershirtsID");

                    b.HasIndex("OvershirtsID");

                    b.ToTable("OutfitOvershirt (Dictionary<string, object>)");
                });

            modelBuilder.Entity("AccessoryOutfit", b =>
                {
                    b.HasOne("Igtampe.Clothespin.Common.Clothes.Items.Accessory", null)
                        .WithMany()
                        .HasForeignKey("AccessoriesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Igtampe.Clothespin.Common.Clothes.Outfit", null)
                        .WithMany()
                        .HasForeignKey("OutfitsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Igtampe.Clothespin.Common.Clothes.Items.Accessory", b =>
                {
                    b.HasOne("Igtampe.Clothespin.Common.Tracking.Person", "Owner")
                        .WithMany("Accessories")
                        .HasForeignKey("OwnerID");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Igtampe.Clothespin.Common.Clothes.Items.Belt", b =>
                {
                    b.HasOne("Igtampe.Clothespin.Common.Tracking.Person", "Owner")
                        .WithMany("Belts")
                        .HasForeignKey("OwnerID");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Igtampe.Clothespin.Common.Clothes.Items.Overshirt", b =>
                {
                    b.HasOne("Igtampe.Clothespin.Common.Tracking.Person", "Owner")
                        .WithMany("Overshirts")
                        .HasForeignKey("OwnerID");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Igtampe.Clothespin.Common.Clothes.Items.Pants", b =>
                {
                    b.HasOne("Igtampe.Clothespin.Common.Tracking.Person", "Owner")
                        .WithMany("Pants")
                        .HasForeignKey("OwnerID");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Igtampe.Clothespin.Common.Clothes.Items.Shirt", b =>
                {
                    b.HasOne("Igtampe.Clothespin.Common.Tracking.Person", "Owner")
                        .WithMany("Shirts")
                        .HasForeignKey("OwnerID");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Igtampe.Clothespin.Common.Clothes.Items.Shoes", b =>
                {
                    b.HasOne("Igtampe.Clothespin.Common.Tracking.Person", "Owner")
                        .WithMany("Shoes")
                        .HasForeignKey("OwnerID");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Igtampe.Clothespin.Common.Clothes.Items.Socks", b =>
                {
                    b.HasOne("Igtampe.Clothespin.Common.Tracking.Person", "Owner")
                        .WithMany("Socks")
                        .HasForeignKey("OwnerID");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Igtampe.Clothespin.Common.Clothes.Outfit", b =>
                {
                    b.HasOne("Igtampe.Clothespin.Common.Clothes.Items.Belt", "Belt")
                        .WithMany("Outfits")
                        .HasForeignKey("BeltID");

                    b.HasOne("Igtampe.Clothespin.Common.Tracking.Person", "Owner")
                        .WithMany("Outfits")
                        .HasForeignKey("OwnerID");

                    b.HasOne("Igtampe.Clothespin.Common.Clothes.Items.Pants", "Pants")
                        .WithMany("Outfits")
                        .HasForeignKey("PantsID");

                    b.HasOne("Igtampe.Clothespin.Common.Clothes.Items.Shirt", "Shirt")
                        .WithMany("Outfits")
                        .HasForeignKey("ShirtID");

                    b.HasOne("Igtampe.Clothespin.Common.Clothes.Items.Shoes", "Shoes")
                        .WithMany("Outfits")
                        .HasForeignKey("ShoesID");

                    b.HasOne("Igtampe.Clothespin.Common.Clothes.Items.Socks", "Socks")
                        .WithMany("Outfits")
                        .HasForeignKey("SocksID");

                    b.Navigation("Belt");

                    b.Navigation("Owner");

                    b.Navigation("Pants");

                    b.Navigation("Shirt");

                    b.Navigation("Shoes");

                    b.Navigation("Socks");
                });

            modelBuilder.Entity("Igtampe.Clothespin.Common.Tracking.LogItem", b =>
                {
                    b.HasOne("Igtampe.Clothespin.Common.Clothes.Outfit", "Outfit")
                        .WithMany()
                        .HasForeignKey("OutfitID");

                    b.HasOne("Igtampe.Clothespin.Common.Tracking.Person", "Owner")
                        .WithMany("Log")
                        .HasForeignKey("OwnerID");

                    b.Navigation("Outfit");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Igtampe.Clothespin.Common.Tracking.Person", b =>
                {
                    b.HasOne("Igtampe.Clothespin.Common.User", "TiedUser")
                        .WithMany("Persons")
                        .HasForeignKey("TiedUserUsername");

                    b.Navigation("TiedUser");
                });

            modelBuilder.Entity("OutfitOvershirt", b =>
                {
                    b.HasOne("Igtampe.Clothespin.Common.Clothes.Outfit", null)
                        .WithMany()
                        .HasForeignKey("OutfitsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Igtampe.Clothespin.Common.Clothes.Items.Overshirt", null)
                        .WithMany()
                        .HasForeignKey("OvershirtsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Igtampe.Clothespin.Common.Clothes.Items.Belt", b =>
                {
                    b.Navigation("Outfits");
                });

            modelBuilder.Entity("Igtampe.Clothespin.Common.Clothes.Items.Pants", b =>
                {
                    b.Navigation("Outfits");
                });

            modelBuilder.Entity("Igtampe.Clothespin.Common.Clothes.Items.Shirt", b =>
                {
                    b.Navigation("Outfits");
                });

            modelBuilder.Entity("Igtampe.Clothespin.Common.Clothes.Items.Shoes", b =>
                {
                    b.Navigation("Outfits");
                });

            modelBuilder.Entity("Igtampe.Clothespin.Common.Clothes.Items.Socks", b =>
                {
                    b.Navigation("Outfits");
                });

            modelBuilder.Entity("Igtampe.Clothespin.Common.Tracking.Person", b =>
                {
                    b.Navigation("Accessories");

                    b.Navigation("Belts");

                    b.Navigation("Log");

                    b.Navigation("Outfits");

                    b.Navigation("Overshirts");

                    b.Navigation("Pants");

                    b.Navigation("Shirts");

                    b.Navigation("Shoes");

                    b.Navigation("Socks");
                });

            modelBuilder.Entity("Igtampe.Clothespin.Common.User", b =>
                {
                    b.Navigation("Persons");
                });
#pragma warning restore 612, 618
        }
    }
}
